# See https://github.com/conda/conda-build/issues/2666 for the missing tag
{% set version = environ.get('GIT_DESCRIBE_TAG', 'untagged')|string|replace('-','_') %}
{% set build_number = environ.get('GIT_DESCRIBE_NUMBER', '0') %}
{% set build_string = "master_" + ((build_flavour + "_") if build_flavour else "") + build_number %}

package:
  name: pyeantic
  version: {{ version }}

source:
  git_url: {{ environ.get('FEEDSTOCK_ROOT', '..') }}

build:
  number: {{ build_number }}
  string: {{ build_string }}
  # eantic & cppyy are not available for Windows
  skip: True  # [win]
  skip: True  # [py<36]
{%- if build_flavour %}
  # only run non-release checks on Linux/3.7 (unfortunately, the py selector is ignored by conda-smithy.)
  skip: True  # [not linux or py<37]
{% endif %}
  run_exports:
    - pyeantic {{ version }}

requirements:
  build:
    - libtool
    - automake
    # to search for the renfxx library, the C++ wrapper for e-antic
    - {{ compiler('cxx') }}
  host:
    - python
    - setuptools
    # We need all runtime dependencies to run tests during the build
    - cppyy
    - boost-cpp
    - e-antic 1.*
    # enable check-valgrind in ./configure
    - valgrind >=3.15.0  # [linux]
    # We use pytest for testing
    - pytest
    # We want to run our optional SageMath tests
    - sagelib
    - pip
    - ipywidgets
    - sympy
  run:
    - cppyy
    - boost-cpp
    # Strangely run_exports of e-antic is not picked up correctly (it's missing from the package on flatsurf)
    # This is probably due to recent bugs in conda-build (mid 2019)
    - e-antic 1.*

{%- if build_flavour %}
features:
  - {{ build_flavour }}
{% endif %}

{%- if not build_flavour %}
test:
  imports:
    - pyeantic
{% endif %}

about:
  home: https://github.com/flatsurf/pyeantic
  license: GPL3
  license_file: COPYING
  summary: Python Wrapper for E-ANTIC

extra:
  recipe-maintainers:
    - saraedum
    - videlec
